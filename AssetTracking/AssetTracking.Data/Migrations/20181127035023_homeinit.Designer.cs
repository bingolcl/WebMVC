// <auto-generated />
using System;
using AssetTracking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetTracking.Data.Migrations
{
    [DbContext(typeof(AssetContext))]
    [Migration("20181127035023_homeinit")]
    partial class homeinit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssetTracking.Domain.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetTypeId");

                    b.Property<string>("AssignedTo");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("ManufacturerId");

                    b.Property<int?>("ModelId");

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<string>("TagNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetTracking.Domain.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AssetType");

                    b.HasData(
                        new { Id = 1, Name = "Desktop PC" },
                        new { Id = 2, Name = "Laptop" },
                        new { Id = 3, Name = "Tablet" },
                        new { Id = 4, Name = "Monitor" },
                        new { Id = 5, Name = "Mobile Phone" },
                        new { Id = 6, Name = "Desk Phone" }
                    );
                });

            modelBuilder.Entity("AssetTracking.Domain.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new { Id = 1, Name = "Dell" },
                        new { Id = 2, Name = "HP" },
                        new { Id = 3, Name = "Acer" },
                        new { Id = 4, Name = "Apple" },
                        new { Id = 5, Name = "Samsung" },
                        new { Id = 6, Name = "LG" },
                        new { Id = 7, Name = "Avaya" },
                        new { Id = 8, Name = "Polycom" },
                        new { Id = 9, Name = "Cisco" }
                    );
                });

            modelBuilder.Entity("AssetTracking.Domain.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManufacturerId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Model");

                    b.HasData(
                        new { Id = 1, ManufacturerId = 1, Name = "Inspiron" },
                        new { Id = 2, ManufacturerId = 1, Name = "XPS" },
                        new { Id = 3, ManufacturerId = 2, Name = "Elite" },
                        new { Id = 4, ManufacturerId = 3, Name = "Aspire" },
                        new { Id = 5, ManufacturerId = 1, Name = "Latitude E4550" },
                        new { Id = 6, ManufacturerId = 1, Name = "Latitude E5550" },
                        new { Id = 7, ManufacturerId = 4, Name = "MacBook Air" },
                        new { Id = 8, ManufacturerId = 4, Name = "MacBook Pro" },
                        new { Id = 9, ManufacturerId = 4, Name = "iPad mini" },
                        new { Id = 10, ManufacturerId = 4, Name = "iPad Air" },
                        new { Id = 11, ManufacturerId = 5, Name = "Galaxy Tab3" },
                        new { Id = 12, ManufacturerId = 3, Name = "S200" },
                        new { Id = 13, ManufacturerId = 3, Name = "STQ414" },
                        new { Id = 14, ManufacturerId = 6, Name = "22MP" },
                        new { Id = 15, ManufacturerId = 2, Name = "Pavilion" },
                        new { Id = 16, ManufacturerId = 4, Name = "iPhone 5" },
                        new { Id = 17, ManufacturerId = 4, Name = "iPhone 6" },
                        new { Id = 18, ManufacturerId = 5, Name = "Galaxy S4" },
                        new { Id = 19, ManufacturerId = 5, Name = "Galaxy S5" },
                        new { Id = 20, ManufacturerId = 5, Name = "Galaxy Note5" },
                        new { Id = 21, ManufacturerId = 7, Name = "9612G" },
                        new { Id = 22, ManufacturerId = 8, Name = "SoundPoint 331" },
                        new { Id = 23, ManufacturerId = 9, Name = "SPA525G2" }
                    );
                });

            modelBuilder.Entity("AssetTracking.Domain.Asset", b =>
                {
                    b.HasOne("AssetTracking.Domain.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AssetTracking.Domain.Manufacturer", "Manufacturer")
                        .WithMany("Assets")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AssetTracking.Domain.Model")
                        .WithMany("Assets")
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("AssetTracking.Domain.Model", b =>
                {
                    b.HasOne("AssetTracking.Domain.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
